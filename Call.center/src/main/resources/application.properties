server.port=8080
logging.level.root=INFO
#-------------------------
#utilizzo della variabili di ambiente per nascondere i parametri di connessione
spring.datasource.url= jdbc:mysql://localhost:3306/db_callcenter2
spring.datasource.username=root
# spring.datasource.password=""

#-------------------------

# Caso 1 : serve anche nel caso voglia far generare a Jpa gli script DDL
#indico in quali file inserire scrivere gli script DDL generati da Jpa

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=drop.sql

#-------------------------

# Caso 2 : lascio che sia Jpa a creare lo schema sulla base delle informazioni
# inserite negli entity (e tutte le sue successive  modifiche apportate
# tramite modifica degli stessi entity)

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.defer-datasource-initialization=true

#-------------------------

# Caso 3 : generazione dello schema e inizializzazione dei dati tramite script
# Se voglio utilizzare gli script schema.sql e data.sql (copiati nella
# cartella /resources) devo inserire i seguenti settaggi
#spring.jpa.hibernate.ddl-auto=none
#... ed inoltre devo inserire questa direttiva, da togliere negli altri casi
#spring.sql.init.mode=always

#-------------------------

#Direttive a jpa per mandare su log le query eseguite in automatico dal framework
#spring.jpa.show-sql=true

#///////////////////////////////////
#Costanza

# Hibernate generation DDL (none,validate,update,create,create-drop)
spring.jpa.hibernate.ddl-auto=none


#Loggin SQL
#spring.jpa.show-sql= true
#spring.jpa.properties.hibernate.format_sql=true